#!/usr/bin/env python
PACKAGE = "ros_recognizer"

from dynamic_reconfigure.parameter_generator_catkin import *

match_gen = ParameterGenerator()
match_gen.add("corr_distance",    double_t,   0, "Correspondence distance (default 0.5)", 2, 0, 10)
match_gen.add("use_hough",          bool_t,   0, "Grouping method",  True)
match_gen.add("cluster_size",     double_t,   0, "Cluster size (default 0.01)", .01, -1., .7)
match_gen.add("cluster_thresh",   double_t,   0, "Clustering threshold (default 5)", 5, -1, 98)
match_gen.add("refine_svd",         bool_t,   0, "Use AbsoluteOrientation",  False)
match_gen.add("refine_icp",         bool_t,   0, "Use IterativeClosestPoint",  True)
match_gen.add("icp_max_iter",        int_t,   0, "ICP max iterations (default 5)", 30, 1, 101)
match_gen.add("icp_corr_dist",    double_t,   0, "ICP correspondence distance (default .005)", .01, 0, .1)
match_gen.add("hv_inlier_th",     double_t,   0, "Inlier threshold (default .005)", .005, 0, .1)
match_gen.add("hv_occlusion_th",  double_t,   0, "Occlusion threshold (default .01)", .01, 0, 1)
match_gen.add("hv_regularizer",   double_t,   0, "Regularizer value (default 3)", 3.0, 0, 50)
match_gen.add("hv_rad_normals",   double_t,   0, "Normals radius (default .05)", .05, 0, 0.1)
match_gen.add("hv_detect_clutter",  bool_t,   0, "Clutter detection enabled",  True)
match_gen.add("hv_rad_clutter",   double_t,   0, "Clutter radius (default 0.03)", .03, 0, 1)
match_gen.add("hv_clutter_reg",   double_t,   0, "Clutter regularizer (default 5)", 5, 0, 50)

exit(match_gen.generate(PACKAGE, "pcl_recognizer", "Matcher"))